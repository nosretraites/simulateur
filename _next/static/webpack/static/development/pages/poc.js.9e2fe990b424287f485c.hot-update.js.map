{"version":3,"file":"static/webpack/static/development/pages/poc.js.9e2fe990b424287f485c.hot-update.js","sources":["webpack:///./pages/poc.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nimport xlsx from 'xlsx';\nimport { ResponsiveLine } from \"@nivo/line\";\nimport { useFormik } from \"formik\";\n\nimport { Context } from \"../context\";\nimport { fetchCareers, postSimpleForm } from \"../services/api\";\n\nimport { withProvider } from \"../components/Layout\";\n\nconst SimpleForm = () => {\n  const [raw, setRaw] = useState(false);\n  const [salaryPlotData, setSalaryPlotData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/data.xlsx')\n\n    .then(response => response.arrayBuffer())\n    .then(blob => {\n        const raw = xlsx.read(new Uint8Array(blob), {type:\"array\"})\n        setRaw(raw)\n        console.log(xlsx.utils.sheet_to_csv(raw.Sheets.emp))\n\n        const data = rawData.map((v, i) => ({ x: i, y: v }));\n\n        setSalaryPlotData([{ id: career, data }]);\n    })\n  }, []);\n\n\n  return (\n    <div>\n      <h1>TEST</h1>\n            <ResponsiveLine\n        data={salaryPlotData}\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n        xScale={{ type: \"point\" }}\n        yScale={{\n          type: \"linear\",\n          min: \"auto\",\n          max: \"auto\",\n          stacked: true,\n          reverse: false\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          orient: \"bottom\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: \"Ã‚ge\",\n          legendOffset: 36,\n          legendPosition: \"middle\"\n        }}\n        axisLeft={{\n          orient: \"left\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: \"Salaire\",\n          legendOffset: -40,\n          legendPosition: \"middle\"\n        }}\n        colors={{ scheme: \"nivo\" }}\n        pointSize={10}\n        pointColor={{ theme: \"background\" }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: \"serieColor\" }}\n        pointLabel=\"y\"\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n          {\n            anchor: \"bottom-right\",\n            direction: \"column\",\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 0,\n            itemDirection: \"left-to-right\",\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: \"circle\",\n            symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n            effects: [\n              {\n                on: \"hover\",\n                style: {\n                  itemBackground: \"rgba(0, 0, 0, .03)\",\n                  itemOpacity: 1\n                }\n              }\n            ]\n          }\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default withProvider(SimpleForm);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAfA;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoEA;AACA;AACA;;;;A","sourceRoot":""}