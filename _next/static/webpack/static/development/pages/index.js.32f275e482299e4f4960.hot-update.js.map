{"version":3,"file":"static/webpack/static/development/pages/index.js.32f275e482299e4f4960.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport Router from \"next/router\";\nimport * as d3 from 'd3';\nimport xlsx from 'xlsx';\n\nimport '../styles/restyle.css'\n\nimport { Context } from \"../context\";\nimport { fetchCareers, postSimpleForm } from \"../services/api\";\n\nconst carrieres = [\n  { id: 'SMIC', label: 'SMIC' },\n  { id: 'COR1', label: 'Cadre √† carri√®re sans interruption' },\n  { id: 'COR2', label: 'Non cadre √† carri√®re sans interruption' },\n  { id: 'COR3', label: 'Non cadre √† carri√®re interrompue par du ch√¥mage' },\n  { id: 'COR4', label: 'Non cadre avec une interruption de carri√®re pour enfant' },\n]\n\nconst SimpleForm = () => {\n  const { updateData } = useContext(Context);\n  const [pending, setPending] = useState(false);\n  const [start, setStart] = useState(22);\n  const [career, setCareer] = useState('COR2');\n  const [timerMessage, setTimerMessage] = useState(false);\n  const [result, setResult] = useState(false);\n\n  useEffect(() => {\n    setResult({\n      past: 75,\n      current: 60,\n      age: 63,\n      delay: 3\n    })\n  }, [])\n\n  const formik = useFormik({\n    initialValues: {\n      naissance: 1984,\n      debut: start,\n      carriere: career,\n      proportion: 1\n    },\n    onSubmit: values => {\n      setPending(true)\n      setTimerMessage('üí£ tic. tac. tic. tac. (10 secondes environ pour le moment üòÅ)')\n\n      postSimpleForm(values)\n      .then(blob => {\n          const raw = xlsx.read(new Uint8Array(blob), {type:\"array\"})\n          const data = xlsx.utils.sheet_to_csv(raw.Sheets.fullset)\n          const json = d3.csvParse(data)\n\n          let past, age, current, delay\n          json.forEach(function(r) {\n            const rAge = parseInt(r.age)\n            const rNaissance = parseInt(r.anaiss)\n            if (rNaissance == 1960 && r.scenario == 'actuel') {\n              age = rAge\n              past = Math.round(parseFloat(r.TR_brut)*100)\n            }\n\n            if (rAge == age && r.scenario == 'reforme') {\n              current = Math.round(parseFloat(r.TR_brut)*100)\n            }\n\n            if (current && !delay && r.scenario == 'reforme') {\n              let test = Math.round(parseFloat(r.TR_brut)*100)\n              if (test >= past) {\n                delay = rAge - age\n              }\n            }\n          })\n\n          setResult({\n            past,\n            current,\n            delay,\n            age,\n          })\n      }).finally(() => {\n        setPending(false)\n        setTimerMessage(false)\n      })\n    }\n  });\n\n  return (\n    <div>\n      <header>\n        <h1>\n          Acc√©dez enfin √† l'impact de la r√©forme sur votre retraite\n          <img src=\"/logo_collectif.png\" />\n        </h1>\n      </header>\n\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"inputs row\">\n          <label>\n            Ann√©e de naissance\n            <input\n              id=\"naissance\"\n              name=\"naissance\"\n              type=\"number\"\n              min=\"1930\"\n              max=\"2020\"\n              step=\"1\"\n              onChange={formik.handleChange}\n              value={formik.values.naissance}\n            />\n          </label>\n          <label>\n            √Çge de d√©but de carri√®re\n            <input\n              id=\"debut\"\n              name=\"debut\"\n              type=\"number\"\n              min=\"12\"\n              max=\"77\"\n              step=\"1\"\n              onChange={formik.handleChange}\n              value={formik.values.debut}\n            />\n          </label>\n        </div>\n        <div className=\"row\">\n          <label>Carri√®re</label>\n          <div className=\"carrieres\">\n            { carrieres.map(p => (\n              <div className=\"carriere\" key={p.id}>\n                <label>\n                <input type=\"radio\"\n                  onChange={formik.handleChange}\n                  value={formik.values.carriere}\n                  name=\"carriere\"\n                  value={p.id}\n                  checked={formik.values.carriere === p.id} />\n                  {p.label}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"row submit\">\n          <button type=\"submit\" disabled={pending}>\n            Acc√©der au carnage\n          </button>\n\n          { pending && timerMessage && <div>{timerMessage}</div> }\n        </div>\n        { result && (\n          <div className=\"row results\">\n            <div className=\"result\">\n              <span>La personne avec la m√™me carri√®re</span>\n              <span>n√© en <span className=\"semi important\">1960</span></span>\n              <span>peut partir √† la retraite √† {result.age} ans</span>\n              <div className=\"focus\">\n                Sa pension repr√©sente\n                <span className=\"important\">{result.past} %</span>\n                de son dernier salaire\n              </div>\n            </div>\n            <div className=\"result\">\n              <span>Vous</span>\n              <span>n√© en <span className=\"semi important\">1980</span></span>\n              <span>en partant √† la retraite √† {result.age} ans</span>\n              <div className=\"focus\">\n                Votre pension repr√©sente\n                <span className=\"important\">{result.current} %</span>\n                de son dernier salaire\n              </div>\n            </div>\n            <div className=\"result\">\n              <span>Pour conserver</span>\n              <span>une pension</span>\n              <span>suffisante</span>\n              <span>pour vivre</span>\n              <div className=\"focus\">\n                vous devez partir\n                <span className=\"important\">{result.delay} ans</span>\n                plus tard.\n              </div>\n            </div>\n          </div>)\n        }\n      </form>\n    </div>\n  );\n};\n\nexport default SimpleForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAhDA;AAmesourceRoot":""}