{"version":3,"file":"static/webpack/static/development/pages/_app.js.9875fb99e8d0c96d1761.hot-update.js","sources":["webpack:///./components/context.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport xlsx from 'xlsx';\n\nconst isProduction = 'production' === process.env.NODE_ENV\nconst API_BASE = isProduction ? 'https://destinie.reformedesretraites.fr' : 'http://127.0.0.1:5000'\n\nasync function postSimpleForm(values) {\n  const res = await fetch(`${API_BASE}/multi`, {\n    method: \"POST\",\n    body: new URLSearchParams({\n      ...values,\n      proportion: 1\n    }),\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    }\n  })\n  const blob = await res.arrayBuffer();\n\n  const raw = xlsx.read(new Uint8Array(blob), {type:\"array\"})\n  const json = xlsx.utils.sheet_to_json(raw.Sheets.fullset)\n\n  let past, age, current, delay\n  json.forEach(function(r) {\n    const rAge = parseInt(r.age)\n    const rNaissance = parseInt(r.anaiss)\n    if (rNaissance == 1960 && r.scenario == 'actuel') {\n      age = rAge\n      past = Math.round(parseFloat(r.TR_brut_neut)*100)\n    }\n\n    if (rAge == age && r.scenario == 'reforme') {\n      current = Math.round(parseFloat(r.TR_brut_neut)*100)\n    }\n\n    if (current && !delay && r.scenario == 'reforme') {\n      let test = Math.round(parseFloat(r.TR_brut_neut)*100)\n      if (test >= past) {\n        delay = rAge - age\n      }\n    }\n  })\n\n  return { past, age, current, delay, json: JSON.stringify(json) }\n};\n\nconst Context = createContext({});\n\nconst Provider = ({ children, initialState }) => {\n  const [result, setResult] = useState(initialState);\n  \n  useEffect(() => {\n    initialState && setResult(initialState);\n  }, [initialState])\n\n  return (\n    <Context.Provider value={{\n      result,\n      setResult,\n      postSimpleForm\n    }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport {\n  Context,\n  Provider\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAFA;AAIA;AACA;AADA;AANA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAWA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAqCA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;;;;;A","sourceRoot":""}